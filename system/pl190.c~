/**
 * @file pl190.c
 *
 * Driver for the PrimeCell Vectored Interrupt Controller (VIC) (PL190).
 *
 * This was written using the official manual from ARM Ltd.:
 *
 *  "PrimeCell Vectored Interrupt Controller (PL190) Technical Reference
 *  Manual", revision r1p2.
 *
 * Note: this simple driver currently does not actually use vectored interrupts
 * (where the controller provides the address of the interrupt service routine
 * in VICVECTADDR so that software doesn't have to check VICIRQSTATUS).  Nor
 * does it allow setting anything as a FIQ (Fast Interrupt Request) rather than
 * a regular IRQ.
 */
/* Embedded Xinu, Copyright (C) 2014.  All rights reserved. */

#include <xinu.h>
#include <stdint.h>
#include <stddef.h>


//interrupt_handler_t interruptVector[32];

/**
 * Enable an interrupt request line.
 *
 * @param irq
 *      Number of the IRQ to enable, which on this platform must be in the
 *      range [0, 31].
 */
void enable_irq(intmask irq)
{
    //regs->VICINTENABLE = 1U << irq;
}

/**
 * Disable an interrupt request line.
 *
 * @param irq
 *      Number of the IRQ to disable, which on this platform must be in the
 *      range [0, 31].
 */
void disable_irq(intmask irq)
{
    //regs->VICINTENCLEAR = 1U << irq;
}

/**
 * Call the service routine for each pending IRQ.
 */
//void dispatch(void)
//{
    /*uint32_t status = regs->VICIRQSTATUS;

    do
    {
        uint irq = 31 - __builtin_clz(status);
        interruptVector[irq]();
        status ^= 1U << irq;
    }
    while (status);*/
//}
